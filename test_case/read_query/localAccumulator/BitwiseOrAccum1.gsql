#######################################################################
# Target: (Positive) test sample local BitwiseOrAccum
# Description: test local BitwiseOrAccum with different values (int, double, string)
#              and functions(.reset(), .cardinality(), etc.)
#            SYNTAX v2 not supported yet
#            Sample results are random, only check the size of the results
# Designer: Darren Wang
# Date: 2022-06-09
# Doc: https://docs.tigergraph.com/gsql-ref/current/querying/accumulators#_bitwiseOrorOrororaccum_bitwiseoraccum
########################################################################

CREATE OR REPLACE QUERY localAccum_BitwiseOrAccum101 (DATETIME date, DATETIME date2) {
  SumAccum<UINT>   @@sumUint;

  BitwiseOrAccum @BitwiseorResult; // default value = 64-bits of 1 = -1 INT
  BitwiseOrAccum @BitwiseorResult1;
  BitwiseOrAccum @BitwiseorResult2;
  BitwiseOrAccum @defaultBitwiseor;
  BitwiseOrAccum @@BitwiseorResult1;
  BitwiseOrAccum @@defaultBitwiseor;

  S = SELECT s FROM tupPerson:s -(<TUP_MEMBER:e)- _:t
    WHERE e.creationDate > date AND e.creationDate < date2 AND t.title =="Wall of Eduardo Rodriguez"
    ACCUM
      @@sumUint += 1,
      s.@BitwiseorResult += e.creationEpoch,
      s.@BitwiseorResult += 9998,
      s.@BitwiseorResult1 += e.creationEpoch,
      s.@BitwiseorResult1 += 9998,
      s.@BitwiseorResult2 += e.creationEpoch,
      s.@BitwiseorResult2 += 9998,
      #Use a global Accun to verify result
      @@BitwiseorResult1 += e.creationEpoch,
      @@BitwiseorResult1 += 9998
      #xor not functioning, [GTEST_IL]Failed query during compilation:
      POST-ACCUM(s)
      s.@BitwiseorResult1.flip(1),
      s.@BitwiseorResult2.flip(0 , 15),
      @@defaultBitwiseor += s.@defaultBitwiseor;

  PRINT @@sumUint;

  #Test all functions
  PRINT S [S.@BitwiseorResult];
  PRINT S [S.@BitwiseorResult.cardinality()];
  PRINT S [S.@BitwiseorResult.get(1)];
  PRINT S [S.@BitwiseorResult.set(0,FALSE)];
  #flip result in udf and single/dist are different if use inside PRINT[]. 0_ and _0
  PRINT S [S.@BitwiseorResult1];
  PRINT S [S.@BitwiseorResult2];
  #PRINT S [S.@BitwiseorResult.xor(S.@BitwiseorResult1)];

  PRINT @@BitwiseorResult1;
  PRINT @@defaultBitwiseor;

}